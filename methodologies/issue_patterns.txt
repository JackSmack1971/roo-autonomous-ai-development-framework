# Issue Detection & Routing Patterns
# Standardized patterns for detecting and routing issues between modes

issue_patterns:
  
  # Security-Related Issues
  security_gaps:
    indicators: 
      - "authentication_mechanism_undefined"
      - "authorization_controls_missing" 
      - "data_encryption_not_specified"
      - "input_validation_absent"
      - "session_management_unclear"
    severity: "high"
    route_to: "sparc-security-architect"
    context_required: ["architecture.md", "data_flows", "user_interactions"]
    acceptance_criteria:
      - "threat_model_updated"
      - "security_controls_defined"
      - "attack_vectors_addressed"

  compliance_violations:
    indicators:
      - "gdpr_requirements_not_addressed"
      - "pci_compliance_missing"
      - "hipaa_considerations_absent"
      - "audit_trails_undefined"
    severity: "high"
    route_to: "compliance-specialist"  # Dynamic mode creation
    context_required: ["regulations", "data_handling", "user_consent"]
    acceptance_criteria:
      - "compliance_requirements_mapped"
      - "controls_implemented"
      - "audit_procedures_defined"

  data_privacy_concerns:
    indicators:
      - "personal_data_handling_unclear"
      - "consent_management_missing"
      - "data_retention_undefined"
      - "cross_border_transfers"
    severity: "high"
    route_to: "data-privacy-specialist"  # Dynamic mode creation
    context_required: ["data_flows", "user_data", "storage_patterns"]
    acceptance_criteria:
      - "privacy_by_design_implemented"
      - "consent_mechanisms_defined"
      - "data_minimization_applied"

  # Performance-Related Issues  
  performance_bottlenecks:
    indicators:
      - "n_plus_one_query_patterns"
      - "unbounded_collections"
      - "blocking_io_operations"
      - "inefficient_algorithms"
      - "memory_leaks_possible"
    severity: "medium"
    route_to: "performance-engineer"  # Dynamic mode creation
    context_required: ["architecture.md", "data_access_patterns", "load_requirements"]
    acceptance_criteria:
      - "bottlenecks_identified"
      - "optimization_strategy_defined"
      - "performance_tests_created"

  scalability_concerns:
    indicators:
      - "single_point_of_failure"
      - "stateful_components"
      - "synchronous_processing_only"
      - "database_scaling_limits"
      - "resource_contention"
    severity: "medium"
    route_to: "performance-engineer"
    context_required: ["system_architecture", "load_projections", "growth_plans"]
    acceptance_criteria:
      - "scaling_strategy_defined"
      - "bottlenecks_eliminated" 
      - "load_testing_plan_created"

  # Database-Related Issues
  data_modeling_issues:
    indicators:
      - "complex_query_requirements"
      - "data_consistency_challenges"
      - "transaction_boundary_unclear"
      - "orm_performance_concerns"
      - "data_migration_complexity"
    severity: "medium"
    route_to: "database-specialist"  # Dynamic mode creation
    context_required: ["data_requirements", "query_patterns", "consistency_needs"]
    acceptance_criteria:
      - "data_model_optimized"
      - "query_performance_validated"
      - "migration_strategy_defined"

  # Integration-Related Issues
  api_design_complexity:
    indicators:
      - "multiple_integration_patterns"
      - "version_compatibility_concerns"  
      - "rate_limiting_requirements"
      - "api_gateway_needs"
      - "service_discovery_required"
    severity: "medium"
    route_to: "integration-specialist"  # Dynamic mode creation
    context_required: ["service_architecture", "api_requirements", "integration_patterns"]
    acceptance_criteria:
      - "api_design_standardized"
      - "integration_patterns_defined"
      - "service_contracts_specified"

  service_mesh_requirements:
    indicators:
      - "microservices_communication_complex"
      - "service_discovery_needed"
      - "traffic_management_required"
      - "security_policy_enforcement"
      - "observability_across_services"
    severity: "medium"  
    route_to: "integration-specialist"
    context_required: ["microservices_architecture", "communication_patterns", "security_requirements"]
    acceptance_criteria:
      - "service_mesh_architecture_defined"
      - "traffic_policies_specified"
      - "observability_strategy_implemented"

  # Code Quality Issues
  technical_debt_accumulation:
    indicators:
      - "code_duplication_high"
      - "cyclomatic_complexity_excessive"
      - "test_coverage_below_threshold"
      - "dependency_vulnerabilities"
      - "outdated_frameworks"
    severity: "low"
    route_to: "code-quality-specialist"  # Dynamic mode creation
    context_required: ["codebase_analysis", "quality_metrics", "maintenance_requirements"]
    acceptance_criteria:
      - "debt_assessment_complete"
      - "refactoring_plan_created"
      - "quality_improvements_prioritized"

  maintainability_concerns:
    indicators:
      - "large_function_size"
      - "deep_nesting_levels"
      - "unclear_variable_names"
      - "missing_documentation"
      - "tight_coupling"
    severity: "low"
    route_to: "code-quality-specialist"
    context_required: ["code_metrics", "maintainability_requirements", "team_standards"]
    acceptance_criteria:
      - "maintainability_issues_identified"
      - "refactoring_recommendations_provided"
      - "coding_standards_updated"

  # Testing-Related Issues
  test_coverage_gaps:
    indicators:
      - "critical_paths_untested"
      - "edge_cases_missing"
      - "integration_tests_absent"
      - "error_scenarios_untested"
      - "performance_tests_missing"
    severity: "medium"
    route_to: "sparc-tdd-engineer"
    context_required: ["current_tests", "coverage_report", "critical_functionality"]
    acceptance_criteria:
      - "coverage_above_90_percent"
      - "critical_paths_tested"
      - "edge_cases_covered"

  test_reliability_issues:
    indicators:
      - "flaky_tests_present"
      - "test_execution_slow"
      - "test_maintenance_high"
      - "test_data_management_poor"
      - "mocking_strategy_inconsistent"
    severity: "medium"
    route_to: "sparc-tdd-engineer"
    context_required: ["test_results", "test_execution_metrics", "maintenance_burden"]
    acceptance_criteria:
      - "flaky_tests_eliminated"
      - "test_execution_optimized"
      - "test_maintenance_reduced"

  # Infrastructure-Related Issues
  deployment_complexity:
    indicators:
      - "manual_deployment_steps"
      - "environment_inconsistencies" 
      - "rollback_procedures_unclear"
      - "secrets_management_poor"
      - "monitoring_gaps"
    severity: "medium"
    route_to: "sparc-platform-engineer"
    context_required: ["deployment_requirements", "environment_specifications", "operational_needs"]
    acceptance_criteria:
      - "deployment_automated"
      - "environments_consistent"
      - "rollback_procedures_tested"

  monitoring_inadequacies:
    indicators:
      - "critical_metrics_missing"
      - "alerting_rules_absent"
      - "log_aggregation_poor"
      - "dashboards_inadequate"
      - "incident_response_unclear"
    severity: "medium"
    route_to: "monitoring-specialist"  # Dynamic mode creation
    context_required: ["system_architecture", "operational_requirements", "slo_definitions"]
    acceptance_criteria:
      - "monitoring_comprehensive"
      - "alerting_tuned"
      - "dashboards_informative"

  # Requirements-Related Issues  
  requirements_ambiguity:
    indicators:
      - "acceptance_criteria_vague"
      - "user_stories_incomplete"
      - "business_rules_unclear"
      - "edge_cases_undefined"
      - "stakeholder_conflicts"
    severity: "high"
    route_to: "sparc-specification-writer" 
    context_required: ["stakeholder_feedback", "business_context", "user_research"]
    acceptance_criteria:
      - "requirements_clarified"
      - "acceptance_criteria_specific"
      - "conflicts_resolved"

  scope_creep:
    indicators:
      - "requirements_changing_frequently"
      - "new_features_added_mid_sprint"
      - "stakeholder_alignment_missing"
      - "project_boundaries_unclear"
    severity: "high"
    route_to: "sparc-orchestrator"  # Escalate to orchestrator
    context_required: ["change_requests", "stakeholder_communications", "project_constraints"]
    acceptance_criteria:
      - "scope_boundaries_redefined"
      - "change_control_process_established"
      - "stakeholder_alignment_achieved"

# Escalation Patterns
escalation_rules:
  
  # Technical Escalations
  architecture_conflicts:
    trigger: "multiple_modes_disagree_on_architecture"
    escalate_to: "sparc-orchestrator"
    resolution_approach: "technical_decision_framework"
    
  security_vs_performance:
    trigger: "security_requirements_conflict_with_performance"
    escalate_to: "sparc-orchestrator"
    resolution_approach: "stakeholder_priority_framework"
    
  # Process Escalations  
  infinite_delegation_loop:
    trigger: "same_issue_bounced_between_modes_3_times"
    escalate_to: "sparc-orchestrator"
    resolution_approach: "joint_task_creation"
    
  quality_gate_failures:
    trigger: "mode_output_fails_quality_gates_3_times"
    escalate_to: "quality-assurance-coordinator"
    resolution_approach: "root_cause_analysis"

  # Resource Escalations
  conflicting_priorities:
    trigger: "multiple_high_priority_tasks_for_same_mode"
    escalate_to: "sparc-orchestrator"
    resolution_approach: "priority_negotiation_framework"

# Pattern Learning Integration
learning_feedback:
  successful_resolutions:
    track: ["issue_type", "routing_decision", "resolution_time", "quality_outcome"]
    improve: "routing_accuracy"
    
  failed_resolutions:
    track: ["issue_type", "attempted_routes", "failure_reasons", "final_resolution"]
    improve: "issue_detection_patterns"
    
  routing_effectiveness:
    metrics: ["first_routing_accuracy", "resolution_time", "quality_scores"]
    optimization_target: "minimize_handoffs_maximize_quality"